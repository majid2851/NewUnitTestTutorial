plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id "de.mannodermaus.android-junit5" version "1.8.2.1"
}
android {
    compileSdk 32
    defaultConfig {
        applicationId "com.codingwithmitch.myapplication"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    // (Optional) If you also have JUnit 4-based tests
    testImplementation "junit:junit:4.13.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.2"


    // 4) Jupiter API & Test Runner, if you don't have it already
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    // 5) The instrumentation test companion libraries
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.3.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.3.0"


    // AndroidX test
    def androidx_test_version = "1.5.1"
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation "androidx.test:runner:1.5.1"

    // Architecture components testing
    def androidx_arch_test_version = "2.0.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"


    // -------- MOCKITO
    def mockito_version = "2.19.0"
    testImplementation 'org.mockito:mockito-core:4.11.0'

    // Dagger
    def dagger_version = "2.22"

    // Dagger2 core
    implementation 'com.google.dagger:dagger:2.43.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.43.2'

    // Dagger Android
    implementation 'com.google.dagger:dagger-android:2.43.2'
    implementation 'com.google.dagger:dagger-android-support:2.43.2'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.43.2'
    kapt "com.google.dagger:dagger-compiler:2.43.2"
    kaptAndroidTest "com.google.dagger:dagger-compiler:2.43.2"

    def material_version = "1.0.0"
    implementation "com.google.android.material:material:1.7.0"

    def room_version = "2.1.0-beta01"
    implementation "androidx.room:room-runtime:2.4.3"
    annotationProcessor "androidx.room:room-compiler:2.4.3"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:2.4.3"


    // ViewModel and LiveData
    def lifecycle_version = '2.1.0-alpha04'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"


    // Reactive Streams (convert Observable to LiveData)
    def reactivestreams_version = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:1.1.1"

    // RxJava
    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"

    // RxAndroid
    def rxandroid_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.9.0"

}